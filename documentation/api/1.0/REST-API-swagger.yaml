# curl -X 'GET' 'http://dockerdev.za.cloudlet.cloud:5000/api/1.0/servers' -H 'accept: application/json'
swagger: "2.0"
info:
  description: "The API "
  version: "1.0.0"
  title: "PEON (Play Everything on Nodes)"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "richard@noxnoctua.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "dockerdev.za.cloudlet.cloud:5000"
basePath: "/api/1.0"
tags:
  - name: "Servers"
    description: "Viewing all servers/creating a new server"
  - name: "Server"
    description: "Managing an existing server."
schemes:
  - "http"
paths:
  /servers:
    get:
      tags:
        - "Servers"
      summary: "Get a list of all existing servers on an Orchestrator"
      description: ""
      operationId: "getServers"
      produces:
        - "application/json"
      responses:
        "200":
          description: "List of servers on node"
        "404":
          description: "Command failed."
    post:
      tags:
        - "Servers"
      summary: "Create a new game server"
      description: "Deploy a new PEON WARCAMP, from a PEON WAR PLAN"
      operationId: "createServer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Server configuration"
          required: true
          schema:
            $ref: "#/definitions/servers"
      responses:
        "405":
          description: "Invalid input"
  /server/{game_uid}.{servername}:
    get:
      tags:
        - "Server"
      summary: "Get a specific server's information"
      description: "Get information from a specific server on a PEON Orchestrator."
      operationId: "getServer"
      parameters:
        - name: "game_uid"
          in: "path"
          description: "The PEON game unique ID"
          required: true
          type: "string"
        - name: "servername"
          in: "path"
          description: "The unqiue name for the server."
          required: true
          type: "string"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Details of a specific server."
        "404":
          description: "Command failed."
    put:
      tags:
        - "Server"
      summary: "Manage a server."
      description: "Manage a server. START/STOP/RESTART & update DESCRIPTION"
      operationId: "manageServer"
      consumes:
      - "application/json"
      parameters:
        - name: "game_uid"
          in: "path"
          description: "The PEON game unique ID"
          required: true
          type: "string"
        - name: "servername"
          in: "path"
          description: "The unqiue name for the server."
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Simple json server instruction"
          required: true
      produces:
        - "application/json"
      responses:
        "200":
          description: "Details of a specific server."
        "404":
          description: "Command failed."
    delete:
      tags:
        - "Server"
      summary: "Get a specific server's information"
      description: "Delete a sever on an Orchestrator."
      operationId: "delServer"
      parameters:
        - name: "game_uid"
          in: "path"
          description: "The PEON game unique ID"
          required: true
          type: "string"
        - name: "servername"
          in: "path"
          description: "The unqiue name for the server."
          required: true
          type: "string"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Details of a specific server."
        "404":
          description: "Command failed."
definitions:
  servers:
    description: "The PEON Orchestrator container settings."
    type: "object"
    required:
      - game_uid
      - servername
      - description
      - settings
    properties:
      game_uid:
        type: string
        format: string
        example: valhiem
      servername:
        type: string
        format: string
        example: server01
      description:
        type: string
        format: string
        example: My PEON Valhiem server
      settings:
        type: array
        items:
          $ref: "#/definitions/servers.settings.environment-variables"
  servers.settings.environment-variables:
    description: "Configuring environment variables in your game server."
    type: "object"
    required:
      - type
      - name
      - content
    properties:
      type:
        type: string
        format: string
        example: "env"
      name:
        type: string
        format: string
        example: "Environment Variables"
      content:
        $ref: "#/definitions/servers.settings.environment-variables.content"
  servers.settings.environment-variables.content:
    description: "DIFFERENT FOR EACH GAME.\n E.g: Valhiem specific server settings (found in game plan)."
    type: "object"
    properties:
      SERVERNAME:
        type: string
        format: string
        example: "My-Awesome-Valhiem-Server"
      WORLDNAME:
        type: string
        format: string
        example: "myworld"
      PASSWORD:
        type: string
        format: string
        example: "password123"
  servers.settings.json-file:
    description: "Create a JSON file in ../servers/{game_uid}/{servername}/config/"
    type: "object"
    required:
      - type
      - name
      - content
    properties:
      type:
        type: string
        format: string
        example: "json"
      name:
        type: string
        format: string
        example: "my-file-name.json"
      content:
        type: object
        additionalProperties:
          type: string
          example:
            "key1" : "value1"
            "key2" : "value2"
            "key3" : ["item1","item2"]
  servers.settings.text-file:
    description: "Create a TEXT file in ../servers/{game_uid}/{servername}/config/"
    type: "object"
    required:
      - type
      - name
      - content
    properties:
      type:
        type: string
        format: string
        example: "txt"
      name:
        type: string
        format: string
        example: "my-file-name.some-extension"
      content:
        type: string
        format: string
        example: "My text file.\\nWith some content in it.\\n\\n"